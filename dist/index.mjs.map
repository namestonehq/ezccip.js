{"version":3,"file":"index.mjs","sources":["../src/utils.js","../src/ezccip.js","../src/serve.js"],"sourcesContent":["import {toUtf8String} from 'ethers/utils';\n\nexport function error_with(message, params, cause) {\n\tlet error;\n\tif (cause) {\n\t\terror = new Error(message, {cause});\n\t\tif (!error.cause) error.cause = cause;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\treturn Object.assign(error, params);\n}\n\n// dns-encoded name to array of unicode labels\n// inverse of ethers.dnsEncode()\nexport function labels_from_dns_encoded(v) {\n\tlet labels = [];\n\tlet pos = 0;\n\twhile (true) {\n\t\tlet n = v[pos++];\n\t\tif (!n) { // empty\n\t\t\tif (pos !== v.length) break; // must be last\n\t\t\treturn labels;\n\t\t}\n\t\tif (v.length < pos+n) break; // overflow\n\t\tlabels.push(toUtf8String(v.subarray(pos, pos += n)));\n\t}\n\tthrow new Error('invalid DNS-encoded name');\n}\n\n// unicode string to log-safe ascii string with {XX} escapes\n// \" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\t\nexport function asciiize(s) {\n\treturn Array.from(s, ch => {\n\t\tlet cp = ch.codePointAt(0);\n\t\treturn cp >= 32 && cp <= 126 ? ch : `{${cp.toString(16).toUpperCase().padStart(2, '0')}}`;\n\t}).join('');\n}\n","import {labels_from_dns_encoded, error_with, asciiize} from './utils.js';\n\n// direct imports to reduce serverless load\nimport {AbiCoder, Interface, FunctionFragment} from 'ethers/abi';\nimport {isBytesLike, getBytes, isHexString, hexlify} from 'ethers/utils';\nimport {solidityPackedKeccak256} from 'ethers/hash';\nimport {keccak256} from 'ethers/crypto';\n\nexport class History {\n\tconstructor(level) {\n\t\tthis.level = level; // integer, counts down\n\t\tthis.children = [];\n\t}\n\tenter() {\n\t\tlet {level, children: v} = this;\n\t\tif (!level) throw new Error('recursion limit');\n\t\tlet child = new History(level-1);\n\t\tv.push(child);\n\t\treturn child;\n\t}\n\thead() {\n\t\tlet head = this;\n\t\twhile (head.next) head = head.next;\n\t\treturn head;\n\t}\n\tthen() {\n\t\treturn this.next = new History(this.level);\n\t}\n\ttoString() {\n\t\tlet {data, name, show, error, children: v, next} = this;\n\t\tlet desc = name ?? `<${data ? data.slice(0, 10) : 'null'}>`;\n\t\tdesc += '(';\n\t\tif (show) desc += show.map(x => typeof x === 'string' ? asciiize(x) : x).join(',');\n\t\tdesc += ')';\n\t\tif (v.length) desc += `^${v.length} [${v.join(' ')}]`;\n\t\tif (error) desc += `<${error}>`;\n\t\tif (next) desc += `.${next}`;\n\t\treturn desc;\n\t}\n}\n\nconst ABI_CODER = AbiCoder.defaultAbiCoder();\nconst MULTICALL = 'multicall';\nexport const RESOLVE_ABI = new Interface([\n\t'function name(bytes32 node) external view returns (string)',\n\t'function addr(bytes32 node) external view returns (address)',\n\t'function addr(bytes32 node, uint256 type) external view returns (bytes)',\n\t'function text(bytes32 node, string key) external view returns (string)',\n\t'function contenthash(bytes32 node) external view returns (bytes)',\n\t'function pubkey(bytes32 node) external view returns (uint256 x, uint256 y)',\n\t'function ABI(bytes32 node, uint256 types) external view returns (uint256 type, bytes memory data)',\n\t'function multicall(bytes[] calls) external view returns (bytes[])',\n]);\nRESOLVE_ABI.forEachFunction(x => x.__name = x.format());\n\nexport class EZCCIP {\n\tconstructor() {\n\t\tthis.impls = new Map();\n\t\t// multicall is always enabled\n\t\t// you can disable it with {recursionLimit: 0}\n\t\tthis.register('multicall(bytes[]) external view returns (bytes[])', async ([calls], context, history) => {\n\t\t\thistory.show = false;\n\t\t\treturn [await Promise.all(calls.map(x => this.handleCall(x, context, history.enter()).catch(encode_error)))];\n\t\t});\n\t}\n\tenableENSIP10(get, {multicall = true} = {}) {\n\t\t// https://docs.ens.domains/ensip/10\n\t\tthis.register('resolve(bytes, bytes) external view returns (bytes)', async([dnsname, data], context, history) => {\n\t\t\tlet labels = labels_from_dns_encoded(getBytes(dnsname));\n\t\t\tlet name = labels.join('.');\n\t\t\t// note: this doesn't normalize\n\t\t\t// incoming name should be normalized\n\t\t\t// your database should be normalized\n\t\t\thistory.show = [name];\n\t\t\tlet record = await get(name, context, history);\n\t\t\tif (record) history.record = record;\n\t\t\treturn callRecord(record, data, multicall, history.then());\n\t\t\t// returns raw since: abi.decode(abi.encode(x)) == x\n\t\t});\n\t}\n\tregister(abi, impl) {\n\t\tif (typeof abi === 'string') {\n\t\t\tabi = abi.trim();\n\t\t\tif (!abi.startsWith('function') && !abi.includes('\\n')) abi = `function ${abi}`;\n\t\t\tabi = [abi];\n\t\t}\n\t\tabi = Interface.from(abi);\n\t\tlet frags = abi.fragments.filter(x => x instanceof FunctionFragment);\n\t\tif (impl instanceof Function) {\n\t\t\tif (frags.length != 1) throw error_with('expected 1 implementation', {abi, impl, names: frags.map(x => x.format())});\n\t\t\tlet frag = frags[0];\n\t\t\timpl = {[frag.name]: impl};\n\t\t}\n\t\treturn Object.entries(impl).map(([key, fn]) => {\n\t\t\tlet frag = frags.find(x => x.name === key || x.format() === key || x.selector === key);\n\t\t\tif (!frag) {\n\t\t\t\tthrow error_with(`expected interface function: ${key}`, {abi, impl, key});\n\t\t\t}\n\t\t\tlet handler = {abi, frag, fn: fn.bind(this)};\n\t\t\tthis.impls.set(frag.selector, handler);\n\t\t\treturn handler;\n\t\t});\n\t}\n\t// https://eips.ethereum.org/EIPS/eip-3668\n\tasync handleRead(sender, calldata, {protocol = 'tor', signingKey, resolver, recursionLimit = 2, ttlSec = 60, ...context}) {\n\t\tif (!isHexString(sender) || sender.length !== 42) throw error_with('expected sender address', {status: 400});\n\t\tif (!isHexString(calldata) || calldata.length < 10) throw error_with('expected calldata', {status: 400});\n\t\tcontext.sender = sender.toLowerCase();\n\t\tcontext.calldata = calldata = calldata.toLowerCase();\n\t\tcontext.protocol = protocol; // allow the protocol be modified by the callback\n\t\tlet history = context.history = new History(recursionLimit);\n\t\tlet response = await this.handleCall(calldata, context, history);\n\t\tlet data;\n\t\tlet expires = Math.floor(Date.now() / 1000) + ttlSec;\n\t\tswitch (context.protocol) {\n\t\t\tcase 'raw': {\n\t\t\t\tdata = response;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ens': {\n\t\t\t\t// https://github.com/ensdomains/offchain-resolver/blob/099b7e9827899efcf064e71b7125f7b4fc2e342f/packages/gateway/src/server.ts#L95\n\t\t\t\tlet hash = solidityPackedKeccak256(\n\t\t\t\t\t['bytes', 'address', 'uint64', 'bytes32', 'bytes32'],\n\t\t\t\t\t['0x1900', resolver, expires, keccak256(calldata), keccak256(response)]\n\t\t\t\t);\n\t\t\t\tdata = ABI_CODER.encode(\n\t\t\t\t\t['bytes', 'uint64', 'bytes'],\n\t\t\t\t\t[response, expires, signingKey.sign(hash).serialized]\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'tor': {\n\t\t\t\t// https://github.com/resolverworks/TheOffchainResolver.sol?tab=readme-ov-file#tor-protocol\n\t\t\t\tlet hash = solidityPackedKeccak256(\n\t\t\t\t\t['address', 'uint64', 'bytes32', 'bytes32'],\n\t\t\t\t\t[resolver, expires, keccak256(calldata), keccak256(response)]\n\t\t\t\t);\n\t\t\t\tdata = ABI_CODER.encode(\n\t\t\t\t\t['bytes', 'uint64', 'bytes'],\n\t\t\t\t\t[signingKey.sign(hash).serialized, expires, response]\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: throw error_with('unknown protocol', {protocol});\n\t\t}\t\t\n\t\treturn {data, history};\n\t}\n\tasync handleCall(calldata, context, history) {\n\t\ttry {\n\t\t\thistory.calldata = calldata;\n\t\t\tlet method = calldata.slice(0, 10);\n\t\t\tlet impl = this.impls.get(method);\n\t\t\tif (!impl || (!history.level && impl.name === MULTICALL)) throw new Error(`unsupported ccip method: ${method}`);\n\t\t\tconst {abi, frag, fn} = history.impl = impl;\n\t\t\thistory.name = frag.name;\n\t\t\tlet args = abi.decodeFunctionData(frag, calldata);\n\t\t\thistory.args = history.show = args;\n\t\t\tlet res = await fn(args, context, history);\n\t\t\tif (!res) {\n\t\t\t\tres = '0x';\n\t\t\t} else if (Array.isArray(res)) {\n\t\t\t\t// an array implies we need to encode the arguments\n\t\t\t\t// otherwise, the result is considered already encoded\n\t\t\t\tres = abi.encodeFunctionResult(frag, res);\n\t\t\t}\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\thistory.error = err;\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\nexport async function callRecord(record, calldata, multicall = true, history) {\t\n\ttry {\n\t\tif (history) history.calldata = calldata;\n\t\tlet method = calldata.slice(0, 10);\n\t\tlet frag = RESOLVE_ABI.getFunction(method);\n\t\tif (!frag || (!multicall && frag.name === MULTICALL)) throw error_with(`unsupported resolve() method: ${method}`, {calldata});\n\t\tif (history) {\n\t\t\thistory.name = frag.name;\n\t\t}\n\t\tlet args = RESOLVE_ABI.decodeFunctionData(frag, calldata);\n\t\tif (history) {\n\t\t\thistory.args = args;\n\t\t\thistory.show = args.slice(1); // drop namehash\n\t\t}\n\t\tlet res;\n\t\tswitch (frag.__name) {\n\t\t\tcase 'multicall(bytes[])': {\n\t\t\t\tif (history) history.show = false;\n\t\t\t\t// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/IMulticallable.sol\n\t\t\t\tres = [await Promise.all(args.calls.map(x => callRecord(record, x, true, history?.enter()).catch(encode_error)))];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'addr(bytes32)': {\n\t\t\t\t// https://eips.ethereum.org/EIPS/eip-137\n\t\t\t\tlet value = await record?.addr?.(60);\n\t\t\t\tres = [value ? hexlify(value) : '0x'.padEnd(66, '0')]; // ethers bug, doesn't support Uint8Array as address\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'addr(bytes32,uint256)': {\n\t\t\t\t// https://eips.ethereum.org/EIPS/eip-2304\n\t\t\t\tlet type = Number(args.type); // TODO: BigInt => number\n\t\t\t\tif (history) history.show = [addr_type_str(type)];\n\t\t\t\tlet value = await record?.addr?.(type);\n\t\t\t\tres = [value || '0x'];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'text(bytes32,string)': {\n\t\t\t\t// https://eips.ethereum.org/EIPS/eip-634\n\t\t\t\tlet value = await record?.text?.(args.key);\n\t\t\t\tres = [value || ''];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'contenthash(bytes32)': {\n\t\t\t\t// https://docs.ens.domains/ens-improvement-proposals/ensip-7-contenthash-field\n\t\t\t\tlet value = await record?.contenthash?.();\n\t\t\t\tres = [value || '0x'];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'name(bytes32)': {\n\t\t\t\t// https://eips.ethereum.org/EIPS/eip-181\n\t\t\t\tlet value = await record?.name?.();\n\t\t\t\tres = [value || ''];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'pubkey(bytes32)': {\n\t\t\t\t// https://github.com/ethereum/EIPs/pull/619\n\t\t\t\tlet value = await record?.pubkey?.();\n\t\t\t\tif (isBytesLike(value)) return value; // support raw encoding\n\t\t\t\tres = value ? [value.x, value.y] : [0, 0];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ABI(bytes32,uint256)': {\n\t\t\t\t// https://docs.ens.domains/ens-improvement-proposals/ensip-4-support-for-contract-abis\n\t\t\t\tlet types = Number(args.types);\n\t\t\t\tif (history) history.show = [abi_types_str(types)];\n\t\t\t\tlet value = await record?.ABI?.(types);\n\t\t\t\tif (isBytesLike(value)) return value; // support raw encoding\n\t\t\t\tres = value ? [value.type, value.data] : [0, '0x'];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// not implemented:\n\t\t\t// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/profiles/IInterfaceResolver.sol\n\t\t\t// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/profiles/IDNSRecordResolver.sol\n\t\t\t// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/profiles/IDNSZoneResolver.sol\n\t\t\t// https://github.com/ensdomains/ens-contracts/blob/staging/contracts/resolvers/profiles/IVersionableResolver.sol\n\t\t}\n\t\treturn RESOLVE_ABI.encodeFunctionResult(frag, res);\n\t} catch (err) {\n\t\tif (history) history.error = err;\n\t\tthrow err;\n\t}\n}\n\n// format exception as `error Error(string)`\nfunction encode_error(err) {\n\treturn '0x08c379a0' + ABI_CODER.encode(['string'], [err.message]).slice(2);\n}\n\n// shorter coin names\nfunction addr_type_str(type) {\n\tconst msb = 0x80000000;\n\treturn type >= msb ? `evm:${type-msb}` : type;\n}\n\n// visible abi types\nfunction abi_types_str(types) {\n\tlet v = [];\n\tif (types & 1) v.push('JSON');\n\tif (types & 2) v.push('zip(JSON)');\n\tif (types & 4) v.push('CBOR');\n\tif (types & 8) v.push('URI');\n\treturn v.join('|');\n}\n","import {createServer} from 'node:http';\nimport {error_with} from './utils.js';\nimport {ethers} from 'ethers';\nimport {EZCCIP} from './ezccip.js';\n\nexport function serve(ezccip, {port, resolvers, log = true, protocol = 'tor', signingKey, ...a} = {}) {\n\tif (ezccip instanceof Function) {\n\t\tlet temp = new EZCCIP();\n\t\ttemp.enableENSIP10(ezccip);\n\t\tezccip = temp;\n\t}\n\tif (log === true) {\n\t\tlog = (...a) => console.log(new Date(), ...a);\n\t} else if (!log) {\n\t\tlog = undefined;\n\t}\n\tif (!signingKey) {\n\t\tsigningKey = new ethers.SigningKey(ethers.randomBytes(32));\n\t}\n\treturn new Promise(ful => {\n\t\tlet http = createServer(async (req, reply) => {\n\t\t\tlet ip = req.headers['x-forwarded-for'] || req.socket.remoteAddress;\n\t\t\tlet {method, url} = req;\n\t\t\ttry {\n\t\t\t\treply.setHeader('access-control-allow-origin', '*');\n\t\t\t\tswitch (method) {\n\t\t\t\t\tcase 'OPTIONS': return reply.setHeader('access-control-allow-headers', '*').end();\n\t\t\t\t\tcase 'POST': {\n\t\t\t\t\t\tlet v = [];\n\t\t\t\t\t\tfor await (let x of req) v.push(x);\n\t\t\t\t\t\tlet {sender, data: calldata} = JSON.parse(Buffer.concat(v));\n\t\t\t\t\t\tlet key = url.slice(1);\n\t\t\t\t\t\tlet resolver = resolvers ? resolvers[key] : sender;\n\t\t\t\t\t\tif (!resolver) throw error_with('unknown resolver', {status: 404, key});\n\t\t\t\t\t\tlet {data, history} = await ezccip.handleRead(sender, calldata, {protocol, signingKey, resolver, ip, ...a});\n\t\t\t\t\t\tlog?.(ip, url, history.toString(), (data.length-2)>>1);\n\t\t\t\t\t\twrite_json(reply, {data});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: throw error_with('unsupported http method', {status: 405, method});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tlog?.(ip, method, url, err);\n\t\t\t\tlet {status = 500, message} = err;\n\t\t\t\treply.statusCode = status;\n\t\t\t\twrite_json(reply, {message});\n\t\t\t}\n\t\t});\n\t\thttp.listen(port, () => {\n\t\t\tport = http.address().port;\n\t\t\tlet endpoint = `http://localhost:${port}`;\n\t\t\tlet signer = ethers.computeAddress(signingKey);\n\t\t\tlet context = `${signer} ${endpoint}`;\n\t\t\tlog?.('Ready!', {protocol, context});\n\t\t\tful({http, port, endpoint, signer, context});\n\t\t});\n\t});\n}\n\nfunction write_json(reply, json) {\n\tlet buf = Buffer.from(JSON.stringify(json));\n\treply.setHeader('content-length', buf.length);\n\treply.setHeader('content-type', 'application/json');\n\treply.end(buf);\n}\n"],"names":[],"mappings":"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"}